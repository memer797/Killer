<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Movie Edit</title>
<link rel="stylesheet" type="text/css" href="/admin.movie.css" /></head>
<body>

  <button class="add-button" onclick="openModal()">Add</button>

<%- include("./panel-movie-add")%>

  <div id="cardsContainer"></div>

  <script>
    let activeOptionsMenu = null;
    let ttags = [];
    function addCard(data){
      var { name, description, category_txt, id, img } = data;

    var cardContainer = document.createElement('div');
cardContainer.classList.add('card-container');

var optionsButton = document.createElement('div');
optionsButton.classList.add('options');
optionsButton.textContent = 'â€¦';
optionsButton.onclick = function(event) {
    showOptionsMenu(event, cardContainer);
};

var optionsMenu = document.createElement('div');
optionsMenu.classList.add('options-menu');
optionsMenu.id = 'optionsMenu';

/*var viewLink = document.createElement('a');
viewLink.href = '#';
viewLink.textContent = 'View';
viewLink.onclick = function() {
    viewCard(id);
};**/

/*var editLink = document.createElement('a');
editLink.href = '#';
editLink.textContent = 'Edit';
editLink.onclick = function() {
    editCard(id);
};*/

var deleteLink = document.createElement('a');
deleteLink.href = '#';
deleteLink.classList.add('delete');
deleteLink.textContent = 'Delete';
deleteLink.onclick = function() {
    confirmDeleteCard(id);
};

//optionsMenu.appendChild(viewLink);
//optionsMenu.appendChild(editLink);
optionsMenu.appendChild(deleteLink);

var imageContainer = document.createElement('div');
imageContainer.classList.add('image-container');

var imageElement = document.createElement('img');
imageElement.src = img;
imageElement.alt = 'Icon';

imageContainer.appendChild(imageElement);

var textContainer = document.createElement('div');
textContainer.classList.add('text-container');

var nameHeading = document.createElement('div');
nameHeading.style.width = '100%';
nameHeading.innerHTML = `<h4>${name}</h4>`;

var descriptionParagraph = document.createElement('div');
descriptionParagraph.classList.add('pd');
descriptionParagraph.textContent = description;

var category = document.createElement('div');
category.classList.add('category');
category.textContent = `${category_txt.join(", ")}`;

var customText = document.createElement('div');
customText.id = 'customText';
customText.style.position = 'absolute';
customText.style.bottom = '5px';
customText.style.left = '5px';
customText.style.color = '#555';
customText.textContent = id;

textContainer.appendChild(nameHeading);
textContainer.appendChild(descriptionParagraph);
textContainer.appendChild(category);
textContainer.appendChild(customText);

cardContainer.appendChild(optionsButton);
cardContainer.appendChild(optionsMenu);
cardContainer.appendChild(imageContainer);
cardContainer.appendChild(textContainer);

cardsContainer.insertBefore(cardContainer, cardsContainer.childNodes[0]);
    };
    

    function openModal() {
      document.getElementById('myModal').style.display = 'flex';
    }
    function closeModal() {
      document.getElementById('myModal').style.display = 'none';
    }

    function addCardFu() {
      const name = document.getElementById('name').value;
      const imageUrl = document.getElementById('imageUrl').value;
      const description = document.getElementById('description').value;
      const category = document.getElementById('category').value;
      const tagsInput = document.getElementById('tags');
      const tagsContainer = document.getElementById('tagContainer');

      // Extract tags from input and split by commas
      const tags = ttags;

fetch("/admin/data/save/movie", {
method: "POST",
headers: {
        "Content-Type": "application/json"
    },
body: JSON.stringify({
name: name,
description: description,
category: category,
tags: tags,
img: document.getElementById("imageUrl").value,
dounload_link: document.getElementById("dounlink").value
}),

}).then(d => d.json()).then(gotData => {
var gotId = gotData.id;

addCard({
	name,
	description,
	category_txt: category,
	id: gotId,
	img: document.getElementById("imageUrl").value 
	});
}).catch(console.log);

      // Clear input fields and tags container
      tagsInput.value = '';
      tagsContainer.innerHTML = '';
if(!tags || tags.length < 1 || tags[0].trim() === "") return;
      // Add tags to the tag container
      tags.forEach(tag => {
        const tagElement = document.createElement('div');
        tagElement.classList.add('tag');
        tagElement.innerText = tag;
        tagElement.addEventListener('click', () => removeTag(tagElement));
        tagsContainer.appendChild(tagElement);
      });

      closeModal(); // Close the modal after adding the card
    }

    function removeTag(tagElement) {
      const tagsContainer = document.getElementById('tagContainer');
      tagsContainer.removeChild(tagElement);
    }

    function viewCard() {
      // Implement view functionality here
      alert('Viewing card soon :)');
    }

    function editCard() {
      // Implement edit functionality here
      alert('Editing card function soon');
    }

    function showOptionsMenu(event, card) {
      // Close any active options menu
      if (activeOptionsMenu) {
        activeOptionsMenu.style.display = 'none';
      }
      const optionsMenu = card.querySelector('.options-menu');
      optionsMenu.style.display = 'block';
      activeOptionsMenu = optionsMenu;

      // Prevent the click event from bubbling up to the card click listener
      event.stopPropagation();
    }

    function confirmDeleteCard(idToDel) {
      const isConfirmed = confirm('Are you sure you want to delete this card?');
      if (isConfirmed) {
        var lastPrompt = prompt(`say YES to delete`);
if(lastPrompt.trim().toLowerCase() !== "yes"){
return;
}
console.log(idToDel);
fetch("/admin/data/delete/movie", {
method: "POST",
headers: {
        "Content-Type": "application/json"
    },
body: JSON.stringify({
id: idToDel
})
});
        const card = activeOptionsMenu.closest('.card-container');
        card.parentNode.removeChild(card);
        activeOptionsMenu.style.display = 'none';
      }
    }

    // Close options menu if you click anywhere else on the document
    document.addEventListener('click', () => {
      if (activeOptionsMenu) {
        activeOptionsMenu.style.display = 'none';
      }
    });
       document.getElementById('tags').addEventListener("input", async() => {
       	  var agsContainer = document.getElementById('tagContainer');
       
       var TInput = document.getElementById('tags');   
       if(!TInput.value.includes(",")) return;
var tgs = TInput.value.split(",");
if(!tgs || tgs.length < 1){
return; 
}
if(!tgs[0].length || tgs[0].trim() === "") return;
 const agElement = document.createElement('div');
        agElement.classList.add('tag');
        agElement.innerText = tgs[0];
        agElement.addEventListener('click', () => removeTag(agElement));
        agsContainer.appendChild(agElement);
TInput.value = "";
ttags.push(tgs[0]);
console.log(tgs);
       });

//get movie data
fetch("/admin/data/get/movie", {
method: "POST"
}).then(ggp => ggp.json()).then(dtta => {
dtta.data.forEach((dosta) => {
console.log(dosta);
      var name = dosta.name;
      var description = dosta.description;
      var category_txt = dosta.category;;
      var id = dosta.id;
      var img = dosta.img;
addCard({
	name,
	description,
	category_txt,
	id,
	img
	});

});
}).catch();
  </script>

</body>
</html>


