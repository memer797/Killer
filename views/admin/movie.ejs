<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="/admin.movie.css">
    <title>Admin Panel</title>
    <style>
        .search-container {
            position: relative;
            margin-bottom: 20px;
margin-left: 20px;
        }

        #searchInput {
            padding: 8px;
            width: 200px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        button {
            padding: 8px 12px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        #suggestions {
            position: absolute;
            top: 100%;
            left: 0;
            width: 100%;
            background-color: #353535;
            border: 1px solid #ccc;
            border-top: none;
            border-radius: 0 0 5px 5px;
            z-index: 1;
            display: none;
        }

        #suggestions div {
            padding: 10px;
            border-bottom: 1px solid #ccc;
        }

        #suggestions div:hover {
            background-color: #f1f1f1;
        }

        .filter-links {
            margin-top: 10px;
        }

        .filter-links a {
            padding: 8px 12px;
            background-color: #4CAF50;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            margin-right: 5px;
        }

        .filter-links a:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="search-container">
        <input type="text" id="searchInput" placeholder="Search movies..." oninput="searchMovies()">
        <button onclick="searchMovies()">Search</button>
        <div class="filter-links">
            <a href="#" onclick="filterCategory('All')">All</a>
            <a href="#" onclick="filterCategory('movie')">Movies</a>
            <a href="#" onclick="filterCategory('webseries')">Web series</a>
            <a href="#" onclick="filterCategory('anime')">Anime</a>
        </div>
        <div id="suggestions"></div>
    </div>

    <button class="add-button" onclick="openModal()">Add</button>

    <%- include("./panel-movie-add") %>
    <%- include("./panel-movie-edit") %>
    <div id="cardsContainer"></div>

    <script>
        let activeOptionsMenu = null;
        let ttags = [];
        let selectedCategoryContentType = 'All';

        function searchMovies() {
            const input = document.getElementById("searchInput");
            const filter = input.value.toUpperCase();
            const cardContainer = document.getElementById("cardsContainer");
            const cards = cardContainer.getElementsByClassName("card-container");
            const suggestionsDiv = document.getElementById("suggestions");
            suggestionsDiv.innerHTML = "";
            let matchCount = 0;

            for (let i = 0; i < cards.length; i++) {
                const h4 = cards[i].querySelector(".text-container h4");
                const p = cards[i].querySelector(".text-container .pd");
                const contentCategory = cards[i].querySelector(".text-container #customText").textContent;
                const txtValue = h4.textContent || h4.innerText;
                const description = p.textContent || p.innerText;

                if ((txtValue.toUpperCase().indexOf(filter) > -1 || description.toUpperCase().indexOf(filter) > -1) &&
                    (selectedCategoryContentType === "All" || contentCategory.includes(selectedCategoryContentType))) {
                    cards[i].style.display = "";
                    if (filter && txtValue.toUpperCase().indexOf(filter) > -1) {
                        const suggestion = document.createElement("div");
                        suggestion.textContent = txtValue;
                        suggestion.onclick = function() {
                            input.value = this.textContent;
                            suggestionsDiv.innerHTML = "";
                            searchMovies();
                        };
                        suggestionsDiv.appendChild(suggestion);
                        matchCount++;
                    }
                } else {
                    cards[i].style.display = "none";
                }
            }

            suggestionsDiv.style.display = matchCount > 0 ? "block" : "none";
        }

        function filterCategory(category) {
            selectedCategoryContentType = category;
            searchMovies();
        }

        function truncateString(str, maxLength) {
            if (str.length > maxLength) {
                return str.substring(0, maxLength - 3) + '...';
            } else {
                return str;
            }
        }

        function addCard(data) {
            const { name, description, category_txt, img, id } = data;
            const cardContainer = document.createElement('div');
            cardContainer.classList.add('card-container');

            const optionsButton = document.createElement('div');
            optionsButton.classList.add('options');
            optionsButton.textContent = 'â€¦';
            optionsButton.onclick = function(event) {
                showOptionsMenu(event, cardContainer);
            };

            const optionsMenu = document.createElement('div');
            optionsMenu.classList.add('options-menu');
            optionsMenu.id = 'optionsMenu';

            const editLink = document.createElement('a');
            editLink.href = '#';
            editLink.textContent = 'Edit';
            editLink.onclick = function() {
                editMovie(name, this);
            };

            const deleteLink = document.createElement('a');
            deleteLink.href = '#';
            deleteLink.classList.add('delete');
            deleteLink.textContent = 'Delete';
            deleteLink.onclick = function() {
                confirmDeleteCard(name);
            };

            optionsMenu.appendChild(editLink);
            optionsMenu.appendChild(deleteLink);

            const imageContainer = document.createElement('div');
            imageContainer.classList.add('image-container');

            const imageElement = document.createElement('img');
            imageElement.src = img;
            imageElement.alt = 'Icon';

            imageContainer.appendChild(imageElement);

            const textContainer = document.createElement('div');
            textContainer.classList.add('text-container');

            const nameHeading = document.createElement('div');
            nameHeading.style.width = '100%';
            nameHeading.innerHTML = `<h4>${name}</h4>`;

            const descriptionParagraph = document.createElement('div');
            descriptionParagraph.classList.add('pd');
            descriptionParagraph.textContent = description;

            const category = document.createElement('div');
            category.classList.add('category');
            category.textContent = truncateString(category_txt.join(", "), 18);

            const customText = document.createElement('div');
            customText.id = 'customText';
            customText.style.position = 'absolute';
            customText.style.bottom = '5px';
            customText.style.left = '5px';
            customText.style.color = 'white';
            customText.textContent = id;

            textContainer.appendChild(nameHeading);
            textContainer.appendChild(descriptionParagraph);
            textContainer.appendChild(category);
            textContainer.appendChild(customText);

            cardContainer.appendChild(optionsButton);
            cardContainer.appendChild(optionsMenu);
            cardContainer.appendChild(imageContainer);
            cardContainer.appendChild(textContainer);

            const cardsContainer = document.getElementById('cardsContainer');
            cardsContainer.insertBefore(cardContainer, cardsContainer.childNodes[0]);
        }

        function openModal() {
            document.getElementById('myModal').style.display = 'flex';
        }

        function closeModal() {
            document.getElementById('myModal').style.display = 'none';
        }

        function removeTag(tagElement) {
            const tagsContainer = document.getElementById('tagContainer');
            tagsContainer.removeChild(tagElement);
        }

        function showOptionsMenu(event, card) {
            if (activeOptionsMenu) {
                activeOptionsMenu.style.display = 'none';
            }
            const optionsMenu = card.querySelector('.options-menu');
            optionsMenu.style.display = 'block';
            activeOptionsMenu = optionsMenu;
            event.stopPropagation();
        }

        function confirmDeleteCard(name) {
            const isConfirmed = confirm('Are you sure you want to delete this card?');
            if (isConfirmed) {
                const lastPrompt = prompt('Say YES to delete');
                if (lastPrompt.trim().toLowerCase() !== "yes") {
                    return;
                }
                fetch("/admin/data/delete/movie", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        name: name
                    })
                });
                const card = activeOptionsMenu.closest('.card-container');
                card.parentNode.removeChild(card);
                activeOptionsMenu.style.display = 'none';
            }
        }

        document.addEventListener('click', () => {
            if (activeOptionsMenu) {
                activeOptionsMenu.style.display = 'none';
            }
        });

        document.getElementById('tags').addEventListener("input", async() => {
            const tagsContainer = document.getElementById('tagContainer');
            const TInput = document.getElementById('tags');
            if (!TInput.value.includes(",")) return;
            const tgs = TInput.value.split(",");
            if (!tgs || tgs.length < 1) {
                return;
            }
            if (!tgs[0].length || tgs[0].trim() === "") return;
            const tagElement = document.createElement('div');
            tagElement.classList.add('tag');
            tagElement.innerText = tgs[0];
            tagElement.addEventListener('click', () => removeTag(tagElement));
            tagsContainer.appendChild(tagElement);
            TInput.value = "";
            ttags.push(tgs[0]);
            console.log(tgs);
        });

        fetch("/admin/data/get/movie", {
            method: "POST"
        }).then(ggp => ggp.json()).then(dtta => {
            dtta.data.forEach((dosta) => {
                const { name, description, category, img, contentType } = dosta;
                addCard({
                    name,
                    description,
                    category_txt: category,
                    img,
                    id: contentType
                });
            });
        }).catch();
    </script>
</body>
</html>
