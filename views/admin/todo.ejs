<style>
.todo-ul {
  margin: 0;
  padding: 0;
}

.todo-ul li {
  cursor: pointer;
  position: relative;
  padding: 12px 50px 12px 40px;
  list-style-type: none;
  background: #888;
  border: 1px solid gold;
  border-radius: 10px;
  font-size: 18px;
  transition: 0.2s;
  
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.todo-ul li:hover {
  background: #ddd;
color: black;
}

.todo-ul li.checked {
  background: #888;
  color: #fff;
  text-decoration: line-through;
}

.todo-ul li.checked::before {
  content: '✅';
  font-size: 23px;
  position: absolute;
  top: 10px;
  left: 10px;
  height: 15px;
  width: 10px;
}

.todo-close {
  position: absolute;
  right: 0;
  top: 0;
  padding: 12px 16px 12px 16px;
  background-color: #f44031;
  border-radius: 15px;
}

.todo-close:hover {
  background-color: #f44336;
  border-radius: 50px;
  color: white;
}

/* Style the header */
.todo-header {
  background-color: #353535;
  padding: 30px 40px;
  text-align: center;
  border-radius: 5px;
}

.todo-header:after {
  content: "";
  display: table;
  clear: both;
}

.todo-input {
  margin: 0;
  border: none;
  border-radius: 15px;
  width: 75%;
  padding: 10px;
  float: left;
  font-size: 16px;
    box-sizing: border-box;
}

.todo-addBtn {
  padding: 10px;
  width: 25%;
  background: #d9d9d9;
  color: #555;
  float: left;
  text-align: center;
  font-size: 16px;
  cursor: pointer;
  transition: 0.3s;
  border-radius: 15px;
    box-sizing: border-box;
}

.todo-addBtn:hover {
  background-color: #bbb;
}
</style>
<div style="
margin: 0;
           padding: 0;
background-color: #353535;
            color: white;
            width: 100%;
            min-height: 100%;">
<div id="myDIV" class="todo-header">
  <h2 style="margin:5px auto;">To Do List</h2>
  <input class="todo-input" type="text" id="myInput" placeholder="Title...">
  <span onclick="newElement()" class="todo-addBtn">Add</span>
</div>

<ul class="todo-ul" id="myUL">
  
</ul>
</div>
<script>
let todoSocket = io("/ws/admin/todo");
// Create a "close" button and append it to each list item
/*var myNodelist = document.getElementsByTagName("LI");
var i;
for (i = 0; i < myNodelist.length; i++) {
  var span = document.createElement("SPAN");
  var txt = document.createTextNode("🗑️");
  span.className = "todo-close";
  span.appendChild(txt);
  myNodelist[i].appendChild(span);
}

// Click on a close button to hide the current list item
var close = document.getElementsByClassName("todo-close");
var i;
for (i = 0; i < close.length; i++) {
  close[i].onclick = function() {
    let conFirm = prompt("Aree You Sure?");
    if(conFirm && conFirm.trim() !== "" && conFirm.toLowerCase() === "yes"){
    var div = this.parentElement;
    div.style.display = "none";
    }
  }
}
*/
// Add a "checked" symbol when clicking on a list item
var list = document.querySelector('ul');
list.addEventListener('click', function(ev) {
  if (ev.target.tagName === 'LI') {
    //ev.target.classList.toggle('checked');
    toogleChecked(ev.target);
  }
}, false);

// Create a new list item when clicking on the "Add" button
function newElement() {
  var inputValue = document.getElementById("myInput").value;
  if (!inputValue || inputValue.trim() === '') {
  return;
  } else {
  todoSocket.emit("new.todo", inputValue);
  }
  document.getElementById("myInput").value = "";
}


function addTask(task) {
let litoneed = document.createElement("li");
litoneed.textContent = task;
let spanToSetInLi = document.createElement("span");
spanToSetInLi.classList.add("todo-close");
spanToSetInLi.textContent = "🗑️";
spanToSetInLi.onclick = function() { deleteTask(this); };
litoneed.appendChild(spanToSetInLi);
document.querySelector(".todo-ul").insertBefore(litoneed, document.querySelector(".todo-ul").firstChild);
};


function deleteTask(task) {
let lastConf = prompt("Sure? yes / no");
if(lastConf !== "yes") return;
//task.parentNode.style.display = "none";
task.parentNode.remove();
let backupTask = task.parentNode;
task.parentNode.removeChild(task);
let titleToDelete = backupTask.textContent;
if(!titleToDelete) return;
todoSocket.emit("todo.delete", titleToDelete);
};


function toogleChecked(task){
console.log(task.textContent);
task.classList.toggle('checked');
};


todoSocket.emit("get.list", (todos) => {
/**
* todos structure
* [
*   {
*      title: String,
*      isDone: Boolean,
*      isDeleted: Boolean,
*    },
*    ...
* ]
**/
todos.forEach(todo => {
if(typeof todo !== "object" || !todo.title){
return;
}
 let parNode = document.querySelector(".todo-ul");
 let createdLi = document.createElement("li");
 createdLi.textContent = todo.title;
 let spanNode = document.createElement("span");
spanNode.classList.add('todo-close');
spanNode.textContent = "🗑️";
spanNode.onclick = function() { deleteTask(this); };
if(todo.isDone){
createdLi.appendChild(spanNode);
 parNode.appendChild(createdLi);
}else{
createdLi.appendChild(spanNode);
 parNode.insertBefore(createdLi, parNode.firstChild);
}
});
});

todoSocket.on("new.todo", (todo) => {
  addTask(todo);
});

todoSocket.on("todo.update", (todo) => {
 /**
* todo structyre
*[
*  {
*    name: String,
*    isDone: Boolean,
*  }
*]
**/
});
</script>
